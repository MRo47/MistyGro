// Copyright 2023 Myron Rodrigues
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyDCYuQ1liCfLFaupcYiSp4rZfw14HX5R7I',
    appId: '1:674246714636:web:5a991d4c7d3f1e6b3cd529',
    messagingSenderId: '674246714636',
    projectId: 'mistygro-24ea9',
    authDomain: 'mistygro-24ea9.firebaseapp.com',
    databaseURL: 'https://mistygro-24ea9-default-rtdb.europe-west1.firebasedatabase.app',
    storageBucket: 'mistygro-24ea9.appspot.com',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCODdKOXwz6e3OLfz8jIe__IGUk2ZfN_Ks',
    appId: '1:674246714636:android:8e9501d0ea793f4e3cd529',
    messagingSenderId: '674246714636',
    projectId: 'mistygro-24ea9',
    databaseURL: 'https://mistygro-24ea9-default-rtdb.europe-west1.firebasedatabase.app',
    storageBucket: 'mistygro-24ea9.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyABKOP9hQWjUbAM0ZI99iW_Jrru_bA8PHs',
    appId: '1:674246714636:ios:772df4957f7358433cd529',
    messagingSenderId: '674246714636',
    projectId: 'mistygro-24ea9',
    databaseURL: 'https://mistygro-24ea9-default-rtdb.europe-west1.firebasedatabase.app',
    storageBucket: 'mistygro-24ea9.appspot.com',
    iosClientId: '674246714636-5eeviao1otn3mton92ltf305a225a8j9.apps.googleusercontent.com',
    iosBundleId: 'com.example.mistyGro',
  );
}
